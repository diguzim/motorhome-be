name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: []

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      node-version: "20.x"
      cache-artifacts: true
      environment: "production"

  quality:
    uses: ./.github/workflows/quality.yml
    needs: build
    with:
      node-version: "20.x"

  multi-node-test:
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    uses: ./.github/workflows/build.yml
    with:
      node-version: ${{ matrix.node-version }}
      cache-artifacts: false
      environment: "production"

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build, quality]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: "20.x"

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            build/
            .strapi/
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}

      - name: Deploy notification
        run: |
          echo "ðŸš€ Deploying to production"
          echo "âœ… Build completed successfully"
          echo "ðŸ“¦ Artifacts ready for deployment"

      # Add your actual deployment steps here
